name: run-tests-on-push
on: push
jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4 #there are different versions of the actions/checkout action
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          architecture: 'x64'
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest
          python -m pip install pandas
          python -m pip install plotly
          python -m pip install pytest-cov
          python -m pip install pyqt5
      - name: Execute tests and generate report
        id: pytest
        run: |
          python -m pytest --junitxml="junit/test-results_`date '+%Y-%m-%d_%T'`.xml" --doctest-modules | tee testresults
          echo "EXIT_CODE=${PIPESTATUS[0]}" >> "$GITHUB_OUTPUT"
          TEST_SUMMARY_START=$(cat testresults | grep FAILURES)
          TEST_SUMMARY_END=$(cat testresults | grep "summary info")
          sed -n "/$TEST_SUMMARY_START/,/$TEST_SUMMARY_END/p" testresults > failure_log
          F_LOG=$(cat failure_log)
          FAIL_LOG=$(echo "$F_LOG")
          echo "FAILURE_LOG="$FAIL_LOG"" >> "$GITHUB_OUTPUT"
        #  echo "--START LOG ECHO--"
        #  cat failure_log
        #  echo "--END LOG ECHO--"
      - name: If All Tests Pass, Merge
        if: ${{ steps.pytest.outputs.EXIT_CODE == 0 }}
        run: 
          echo "${{ steps.pytest.outputs.EXIT_CODE }}"
        #nothing more to do (?), merge branch into master
      - name: If ANY Test Fails, Open A Ticket
        if: ${{ steps.pytest.outputs.EXIT_CODE != 0 }}
        run: |
          echo "$FAILURE_LOG"
        #  echo ""${{ steps.pytest.outputs.FAIL_LOG }}"" 
        #echo ${{steps.version.outputs.FAIL_LOG}}
        #  TEST_SUMMARY_START = $(cat testresults | grep FAILURES)
        #  TEST_SUMMARY_END = $(cat testresults | grep "summary info")
        #  sed -n "/$TEST_SUMMARY_START/,/$TEST_SUMMARY_END/p" testresults > failure_log
        #  echo "FAIL_LOG=$(cat failure_log)"

        #TEST_SUMMARY_END=$(cat testresults | grep "summary info")
        #  echo "FAIL_LOG=$(cat failure_log)" >> "$GITHUB_OUTPUT"
        
        
        
        #ok
        #what do I want/need to do here?
        #Breathe.
        #I want to open an issue based on the failure of the workflow.
        #I presumably have captured the failure log text, now I just need to open an action
        #I will need
          #credentials of the gh repo
          #info about the branch/attempted job
          #information to make an informative title
          #to paste the details of the failure to the issue.

      #TODO:
        #clip portion of test results with failure messages
        #open new issue
        #dump failure text into issue, add some other details